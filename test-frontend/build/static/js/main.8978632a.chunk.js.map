{"version":3,"sources":["helper/Api.js","components/Transaction.jsx","components/Wallet.jsx","components/SetupWallet.jsx","components/AddTransaction.jsx","App.js","reportWebVitals.js","index.js","helper/LocalStorage.js","helper/Constant.js"],"names":["axios","create","baseURL","Transaction","history","useHistory","useState","transactions","setTransactions","page","limit","walletID","sortBy","reqCall","setReqCall","pagination","setPagination","setPage","total","setTotal","fetchTransactionData","data","a","API","get","walletDetails","results","totalResults","toast","error","useEffect","LocalStorage","getWalletId","push","changePage","useCallback","items","number","Pagination","Item","active","onClick","Math","round","sortTransaction","sort","split","downloadTransactions","fields","label","value","transactionData","map","transaction","createdAt","Date","date","toLocaleString","json2csv","Parser","csv","parse","csvData","Blob","type","FileSaver","saveAs","className","Button","style","float","Array","isArray","length","Table","responsive","icon","faSort","_id","Constant","currencyFormat","amount","balance","description","Wallet","setWalletDetails","console","fetchWalletData","Card","body","Row","sm","md","Col","Title","Text","ListGroup","ListGroupItem","name","SetupWallet","useForm","register","handleSubmit","errors","formState","onSubmit","post","username","apiRes","setWalletId","Form","Group","controlId","Label","Control","size","placeholder","required","maxLength","minLength","variant","AddTransaction","typeValue","setTypeValue","setWalletID","apiData","log","res","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","min","ButtonGroup","radio","idx","ToggleButton","id","checked","onChange","e","currentTarget","App","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","Link","as","to","path","newestOnTop","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CryptoJS","require","secretKey","exports","encWalletID","AES","encrypt","toString","localStorage","setItem","getItem","decrypt","enc","Utf8","num","toFixed","replace"],"mappings":"8VAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,iC,gDCiKKC,MAxJf,WACE,IAAMC,EAAUC,cAChB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8BF,mBAAS,CAAEG,KAAM,EAAGC,MAAO,EAAGC,SAAU,KAAMC,OAAS,mBAArF,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAwBV,mBAAS,GAAjC,mBAAOG,EAAP,KAAaQ,EAAb,KACA,EAA0BX,mBAAS,GAAnC,mBAAOY,EAAP,KAAcC,EAAd,KANqB,SAONC,EAPM,8EAOrB,WAAoCC,GAApC,eAAAC,EAAA,+EAEgCC,EAAIC,IAAJ,iCAAkCH,EAAKV,SAAvC,iBAAwDU,EAAKZ,KAA7D,kBAA2EY,EAAKX,MAAhF,mBAAgGW,EAAKT,SAFrI,cAEUa,EAFV,OAGIjB,EAAgBiB,EAAcJ,KAAKK,SACnCP,EAASM,EAAcJ,KAAKM,cAJhC,kBAKWF,EAAcJ,KAAKK,SAL9B,gCAOIE,IAAMC,MAAM,yBAPhB,0DAPqB,sBAiBrBC,qBAAU,WACR,IAAMnB,EAAWoB,IAAaC,cAC1BrB,GACFG,EAAW,2BAAKD,GAAN,IAAeF,cACzBS,EAAqB,2BAAKP,GAAN,IAAeF,eAEnCP,EAAQ6B,KAAK,YAEd,IAEH,IAAMC,EAAaC,uBACjB,SAACd,GACCJ,EAAQI,GACRP,EAAW,2BAAKD,GAAN,IAAeJ,KAAMY,KAC/BD,EAAqB,2BAAKP,GAAN,IAAeJ,KAAMY,OAE3C,CAACR,IAGHiB,qBAAU,WAER,IADA,IAAMM,EAAQ,GADA,WAELC,GACPD,EAAMH,KACJ,cAACK,EAAA,EAAWC,KAAZ,CAA8BC,OAAQH,IAAW5B,EAAMgC,QAAS,kBAAMP,EAAWG,IAAjF,SACGA,GADmBA,KAFjBA,EAAS,EAAGA,GAAUK,KAAKC,MAAMzB,EAAQ,GAAImB,IAAW,EAAxDA,GAOTrB,EAAcoB,KACb,CAAClB,EAAOT,EAAMyB,IAEjB,IAGMU,EAAkB,SAACvB,GACvB,IAAIwB,EAAO,OAC8B,SAAtC,UAAGhC,EAAQD,QAASkC,MAAM,KAAK,KAChCD,EAAO,OAET5B,EAAQ,GACRH,EAAW,2BAAKD,GAAN,IAAcJ,KAAO,EAAGG,OAAO,GAAD,OAAKS,EAAL,YAAawB,MACrDzB,EAAqB,2BAAKP,GAAN,IAAcJ,KAAO,EAAGG,OAAO,GAAD,OAAKS,EAAL,YAAawB,OAG3DE,EAAoB,uCAAG,sCAAAzB,EAAA,6DACrB0B,EAAS,CAAC,CACdC,MAAO,iBACPC,MAAO,OAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,cACPC,MAAO,eAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,YACPC,MAAO,YAET,CACED,MAAO,eACPC,MAAO,cA3BkB,SA6BA9B,EAAqB,2BAAKP,GAAN,IAAeJ,KAAO,EAAEC,MAAOQ,KA7BnD,OA6BrBX,EA7BqB,OA8BrB4C,EAAkB5C,EAAa6C,KAAI,SAAAC,GAEvC,OADAA,EAAYC,UAAY,IAAIC,KAAKF,EAAYG,MAAMC,iBAC5CJ,KAEHK,EAAW,IAAIC,SAAO,CAACX,WACvBY,EAAMF,EAASG,MAAMV,GACrBW,EAAU,IAAIC,KAAK,CAACH,GAAM,CAAEI,KAAM,4BACxCC,IAAUC,OAAOJ,EAAS,oBArCC,2CAAH,qDAuC1B,OACE,sBAAKK,UAAU,SAAf,UACE,oBAAIA,UAAU,mBAAd,iCAEE,cAACC,EAAA,EAAD,CAAQ3B,QAxDS,WACrBrC,EAAQ6B,KAAK,SAuDT,iCACA,cAACmC,EAAA,EAAD,CAAQC,MAAO,CAACC,MAAO,SAAU7B,QAASM,EAA1C,mCAEDwB,MAAMC,QAAQjE,IAAiBA,EAAakE,OAC3C,gCACE,eAACC,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,gDACA,qBAAIlC,QAAS,kBAAMG,EAAgB,WAAnC,oBAAqD,cAAC,IAAD,CAAiBgC,KAAMC,SAC5E,sCACA,yCACA,6CACA,qBAAIpC,QAAS,kBAAMG,EAAgB,SAAnC,0BAAyD,cAAC,IAAD,CAAiBgC,KAAMC,cAGpF,gCACGtE,GACCA,EAAakE,QACblE,EAAa6C,KAAI,SAACC,GAAD,OACf,+BACE,6BAAKA,EAAYyB,MACjB,6BAAKC,IAASC,eAAe3B,EAAY4B,UACzC,6BACwB,WAArB5B,EAAYW,KACX,sBAAMG,UAAU,eAAhB,SAAgCd,EAAYW,OAE5C,sBAAMG,UAAU,cAAhB,SAA+Bd,EAAYW,SAG/C,6BAAKe,IAASC,eAAe3B,EAAY6B,WACzC,6BAAK7B,EAAY8B,YAAc9B,EAAY8B,YAAc,MACzD,6BAAK,IAAI5B,KAAKF,EAAYG,MAAMC,qBAZzBJ,EAAYyB,aAiB7B,qBAAKX,UAAU,cAAf,SACE,cAAC7B,EAAA,EAAD,UAAavB,SAIjB,6D,2CC1FOqE,MA5Df,WACE,IAAMhF,EAAUC,cAChB,EAA0CC,mBAAS,MAAnD,mBAAOmB,EAAP,KAAsB4D,EAAtB,KAuBA,OAtBAvD,qBAAU,WACR,IAAMnB,EAAWoB,IAAaC,cADhB,4CAEd,4BAAAV,EAAA,+EAE8BC,EAAIC,IAAJ,kBAAmBb,IAFjD,OAEQc,EAFR,OAGE4D,EAAiB5D,EAAcJ,MAHjC,gDAKIO,IAAMC,MAAM,yBACZyD,QAAQzD,MAAR,MANJ,0DAFc,sBAWVlB,EAXU,mCAYZ4E,GAEAnF,EAAQ6B,KAAK,YAEd,CAAC7B,IAOF,sBAAK+D,UAAU,SAAf,UACE,oBAAIA,UAAU,mBAAd,4BACC1C,GACC,eAAC+D,EAAA,EAAD,CAAMC,MAAI,EAAV,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,eAACL,EAAA,EAAKM,MAAN,yBACa,+BAAOrE,EAAcqD,WAGpC,cAACe,EAAA,EAAD,CAAKF,GAAI,EAAGC,GAAI,EAAhB,SACE,cAACxB,EAAA,EAAD,CAAQC,MAAO,CAACC,MAAO,SAAU7B,QAhBtB,WACrBrC,EAAQ6B,KAAK,SAeH,sCAGJ,uBACA,cAACuD,EAAA,EAAKO,KAAN,UACE,eAACC,EAAA,EAAD,CAAW7B,UAAU,mBAArB,UACE,eAAC8B,EAAA,EAAD,WACE,yCADF,KACoBxE,EAAcyE,QAElC,eAACD,EAAA,EAAD,WACE,gDADF,KAC2BlB,IAASC,eAAevD,EAAcyD,YAEjE,eAACe,EAAA,EAAD,WACE,6CADF,KACwB,IAAI1C,KAAK9B,EAAc+B,MAAMC,gC,iCCOpD0C,MA1Df,WACE,IAAM/F,EAAUC,cAChB,EAII+F,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAGTE,EAAQ,uCAAG,WAAOpF,GAAP,iBAAAC,EAAA,+EAEUC,EAAImF,KAAK,SAAS,CAACR,KAAO7E,EAAKsF,SAAUzB,QAAS7D,EAAK6D,QAAU7D,EAAK6D,QAAU,IAF1F,QAGX,QADM0B,EAFK,cAGX,IAAGA,GAAH,UAAGA,EAAQvF,YAAX,aAAG,EAAcyD,MACb/C,IAAa8E,YAAYD,EAAOvF,KAAKyD,KACrC1E,EAAQ6B,KAAK,MAEfL,IAAMC,MAAM,yBAPH,gDAWbD,IAAMC,MAAM,yBAXC,yDAAH,sDAed,OACE,sBAAKsC,UAAU,SAAf,UACA,oBAAIA,UAAU,cAAd,8BACA,eAAC2C,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAY5C,UAAU,OAAO6C,UAAU,WAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,aACEC,KAAK,KACLnD,KAAK,OACLoD,YAAY,iBACZlB,KAAK,YACDG,EAAS,WAAY,CAAEgB,UAAU,EAAMC,UAAW,GAAIC,UAAW,OAEhE,OAANhB,QAAM,IAANA,OAAA,EAAAA,EAAQI,WACP,cAACG,EAAA,EAAKf,KAAN,CAAW5B,UAAU,cAArB,4EAGJ,eAAC2C,EAAA,EAAKC,MAAN,CAAY5C,UAAU,OAAO6C,UAAU,UAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,8BACA,cAACH,EAAA,EAAKI,QAAN,aACElD,KAAK,SACLmD,KAAK,KACLjB,KAAK,UACLkB,YAAY,yBACRf,EAAS,aACZ,OAEL,cAACjC,EAAA,EAAD,CAAQoD,QAAQ,UAAUL,KAAK,KAAK1E,QAAS6D,EAAaG,GAAWzC,KAAK,SAA1E,2B,kBCmDSyD,MApGf,WACE,IAAMrH,EAAUC,cAChB,EAAkCC,mBAAS,UAA3C,mBAAOoH,EAAP,KAAkBC,EAAlB,KACA,EAAgCrH,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBiH,EAAjB,KAKA,EAIIxB,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAEfzE,qBAAU,WACR,IAAMnB,EAAWoB,IAAaC,cACzBrB,EAGDiH,EAAYjH,GAFdP,EAAQ6B,KAAK,YAId,CAAC7B,IACJ,IAAMqG,EAAQ,uCAAG,WAAOpF,GAAP,iBAAAC,EAAA,sEAEPuG,EAAU,CAAC5C,OAAQ5D,EAAK4D,OAAQjB,KAAM0D,GACvCrG,EAAK8D,cACJ0C,EAAQ1C,YAAc9D,EAAK8D,aAJpB,SAMQ5D,EAAImF,KAAJ,oBAAsB/F,GAAYkH,GAN1C,OAMPjB,EANO,OAObtB,QAAQwC,IAAI,mBAAoB,CAAEC,IAAKnB,EAAOvF,OAC1CuF,EAAOvF,KAAKyD,MACd/C,IAAa8E,YAAYD,EAAOvF,KAAKyD,KACrC1E,EAAQ6B,KAAK,MAVF,kDAabL,IAAMC,MAAM,wBAAyB,CACnCmG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZjD,QAAQwC,IAAR,MAtBa,0DAAH,sDAyBd,OACE,sBAAK3D,UAAU,SAAf,UACE,oBAAIA,UAAU,cAAd,+CACA,6CAAgBxD,KAChB,eAACmG,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAY5C,UAAU,OAAO6C,UAAU,SAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,qBACA,cAACH,EAAA,EAAKI,QAAN,aACEC,KAAK,KACLnD,KAAK,SACLoD,YAAY,eACZlB,KAAK,UACDG,EAAS,SAAU,CAAEgB,UAAU,EAAMmB,IAAK,OAEzC,OAANjC,QAAM,IAANA,OAAA,EAAAA,EAAQtB,SACP,cAAC6B,EAAA,EAAKf,KAAN,CAAW5B,UAAU,cAArB,iEAGJ,eAAC2C,EAAA,EAAKC,MAAN,CAAY5C,UAAU,OAAO6C,UAAU,cAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,aACElD,KAAK,OACLmD,KAAK,KACLjB,KAAK,cACLkB,YAAY,qBACRf,EAAS,iBACZ,OAEL,cAACS,EAAA,EAAKC,MAAN,CAAY5C,UAAU,OAAO6C,UAAU,OAAvC,SACA,cAACyB,EAAA,EAAD,UAvEkB,CACtB,CAAEvC,KAAM,QAAShD,MAAO,SACxB,CAAEgD,KAAM,SAAUhD,MAAO,WAsEFE,KAAI,SAACsF,EAAOC,GAAR,OACnB,cAACC,EAAA,EAAD,CAEEC,GAAE,gBAAWF,GACb3E,KAAK,QACLwD,QAASmB,EAAM,EAAI,kBAAoB,iBACvCzC,KAAK,QACLhD,MAAOwF,EAAMxF,MACb4F,QAASpB,IAAcgB,EAAMxF,MAC7B6F,SAAU,SAACC,GAAD,OAAOrB,EAAaqB,EAAEC,cAAc/F,QARhD,SAUGwF,EAAMxC,MATFyC,UAcX,cAACvE,EAAA,EAAD,CAAQoD,QAAQ,UAAUL,KAAK,KAAK1E,QAAS6D,EAAaG,GAAWzC,KAAK,SAA1E,2B,OCrCOkF,MApDf,WACE,OACE,eAAC,IAAD,WACE,gCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,yBACA,cAACJ,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiBZ,GAAG,mBAApB,SACE,eAACa,EAAA,EAAD,CAAKvF,UAAU,UAAf,UACE,cAACuF,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,IAAvB,oBAGA,cAACH,EAAA,EAAIC,KAAL,CAAUC,GAAID,IAAME,GAAG,gBAAvB,oCAOR,qBAAK1F,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2F,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAKR,cAAC,IAAD,CACE9B,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjB6B,aAAa,EACb5B,cAAY,EACZ6B,KAAK,EACLC,kBAAgB,EAChB5B,WAAS,EACTD,cAAY,QC7CL8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,mBCfA,IAAIc,EAAWC,EAAQ,IACjBC,EAAY,oBAgBlBC,EAAQtE,YAdY,SAACgC,GACjB,IAAMuC,EAAcJ,EAASK,IAAIC,QAAb,UAAwBzC,GAAxB,UAAiCqC,IAAaK,WAClEjG,QAAQwC,IAAIsD,GACZI,aAAaC,QAAQ,WAAYL,IAYrCD,EAAQnJ,YAVY,WAChB,QAAGwJ,aAAaE,QAAQ,aACNV,EAASK,IAAIM,QAAb,UAAwBH,aAAaE,QAAQ,aAA7C,UAA+DR,IAChEK,SAASP,EAASY,IAAIC,Q,iBCR3CV,EAAQnG,eAJc,SAAC8G,GACnB,MAAO,IAAMA,EAAIC,QAAQ,GAAGC,QAAQ,0BAA2B,S","file":"static/js/main.8978632a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: `http://localhost:3001/api/v1`\r\n  // baseURL: `${window.location.protocol}//${window.location.host}/api/v1`\r\n});","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Table, Pagination, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport LocalStorage from '../helper/LocalStorage';\r\nimport Constant from '../helper/Constant';\r\nimport API from '../helper/Api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSort } from '@fortawesome/free-solid-svg-icons'\r\nimport { Parser } from 'json2csv';\r\nimport FileSaver from 'file-saver';\r\n\r\nfunction Transaction() {\r\n  const history = useHistory();\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [reqCall, setReqCall] = useState({ page: 1, limit: 5, walletID: null, sortBy : 'createdAt:desc' });\r\n  const [pagination, setPagination] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  async function fetchTransactionData(data) {\r\n    try {\r\n      const walletDetails = await API.get(`/transactions?walletId=${data.walletID}&page=${data.page}&limit=${data.limit}&sortBy=${data.sortBy}`);\r\n      setTransactions(walletDetails.data.results);\r\n      setTotal(walletDetails.data.totalResults);\r\n      return walletDetails.data.results;\r\n    } catch (error) {\r\n      toast.error('Internal Server Error');\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const walletID = LocalStorage.getWalletId();\r\n    if (walletID) {\r\n      setReqCall({ ...reqCall, walletID });\r\n      fetchTransactionData({ ...reqCall, walletID });\r\n    } else {\r\n      history.push('/setup');\r\n    }\r\n  }, []);\r\n\r\n  const changePage = useCallback(\r\n    (data) => {\r\n      setPage(data);\r\n      setReqCall({ ...reqCall, page: data });\r\n      fetchTransactionData({ ...reqCall, page: data });\r\n    },\r\n    [reqCall]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const items = [];\r\n    for (let number = 1; number <= Math.round(total / 5); number++) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === page} onClick={() => changePage(number)}>\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    setPagination(items);\r\n  }, [total, page, changePage]);\r\n  \r\n  const newTransaction = () => {\r\n    history.push('/add');\r\n  };\r\n  const sortTransaction = (data) => {\r\n    let sort = 'desc'\r\n    if(`${reqCall.sortBy}`.split(':')[1] === 'desc'){\r\n      sort = 'asc'\r\n    }\r\n    setPage(1);\r\n    setReqCall({ ...reqCall,page : 1, sortBy: `${data}:${sort}` });\r\n    fetchTransactionData({ ...reqCall,page : 1, sortBy: `${data}:${sort}` });\r\n  };\r\n\r\n  const downloadTransactions = async() => {  \r\n    const fields = [{\r\n      label: 'Transaction ID',\r\n      value: '_id'\r\n    },\r\n    {\r\n      label: 'Type',\r\n      value: 'type'\r\n    },\r\n    {\r\n      label: 'Description',\r\n      value: 'description'\r\n    },\r\n    {\r\n      label: 'Amount',\r\n      value: 'amount'\r\n    },\r\n    {\r\n      label: 'Balance',\r\n      value: 'balance'\r\n    },\r\n    {\r\n      label: 'Wallet ID',\r\n      value: 'walletId'\r\n    },\r\n    {\r\n      label: 'Created Date',\r\n      value: 'createdAt'\r\n    }];\r\n    const transactions = await fetchTransactionData({ ...reqCall, page : 1,limit: total });\r\n    const transactionData = transactions.map(transaction => {\r\n      transaction.createdAt = new Date(transaction.date).toLocaleString();\r\n      return transaction;\r\n    })\r\n    const json2csv = new Parser({fields});\r\n    const csv = json2csv.parse(transactionData);\r\n    const csvData = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    FileSaver.saveAs(csvData, 'transactions.csv');\r\n  }\r\n  return (\r\n    <div className=\"center\">\r\n      <h3 className=\"text-center mb-5\">Wallet Transactions</h3>\r\n      \r\n        <Button onClick={newTransaction}>Add New Transaction</Button>\r\n        <Button style={{float: 'right'}} onClick={downloadTransactions}>Download Transactions</Button>\r\n      \r\n      {Array.isArray(transactions) && transactions.length ? (\r\n        <div>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction ID</th>\r\n                <th onClick={() => sortTransaction('amount')}>Amount <FontAwesomeIcon icon={faSort} /></th>\r\n                <th>Type</th>\r\n                <th>Balance</th>\r\n                <th>Description</th>\r\n                <th onClick={() => sortTransaction('date')}>Created Date <FontAwesomeIcon icon={faSort} /></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transactions &&\r\n                transactions.length &&\r\n                transactions.map((transaction) => (\r\n                  <tr key={transaction._id}>\r\n                    <td>{transaction._id}</td>\r\n                    <td>{Constant.currencyFormat(transaction.amount)}</td>\r\n                    <td>\r\n                      {transaction.type === 'CREDIT' ? (\r\n                        <span className=\"text-success\">{transaction.type}</span>\r\n                      ) : (\r\n                        <span className=\"text-danger\">{transaction.type}</span>\r\n                      )}\r\n                    </td>\r\n                    <td>{Constant.currencyFormat(transaction.balance)}</td>\r\n                    <td>{transaction.description ? transaction.description : '-'}</td>\r\n                    <td>{new Date(transaction.date).toLocaleString()}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n          <div className=\"float-right\">\r\n            <Pagination>{pagination}</Pagination>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div> No Transaction Found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","import React, { useState, useEffect } from 'react';\r\nimport LocalStorage from '../helper/LocalStorage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport API from '../helper/Api';\r\nimport { Card, ListGroup, ListGroupItem, Button, Row, Col } from 'react-bootstrap';\r\nimport Constant from '../helper/Constant';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Wallet() {\r\n  const history = useHistory();\r\n  const [walletDetails, setWalletDetails] = useState(null);\r\n  useEffect(() => {\r\n    const walletID = LocalStorage.getWalletId();\r\n    async function fetchWalletData() {\r\n      try {\r\n      const walletDetails = await API.get(`/wallet/${walletID}`);\r\n      setWalletDetails(walletDetails.data);\r\n      } catch (error){\r\n        toast.error('Internal Server Error');\r\n        console.error(error);\r\n      }\r\n    }\r\n    if (walletID) {\r\n      fetchWalletData();\r\n    } else {\r\n      history.push('/setup');\r\n    }\r\n  }, [history]);\r\n\r\n  const newTransaction = () => {\r\n    history.push('/add');\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <h3 className=\"text-center mb-5\">Wallet Details</h3>\r\n      {walletDetails && (\r\n        <Card body>\r\n          <Row sm={8} md={8}>\r\n            <Col>\r\n              <Card.Title>\r\n                Wallet ID: <span>{walletDetails._id}</span>\r\n              </Card.Title>\r\n            </Col>\r\n            <Col sm={4} md={4}>\r\n              <Button style={{float: 'right'}} onClick={newTransaction}>Add New Transaction</Button>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Card.Text>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroupItem>\r\n                <b>Username</b>: {walletDetails.name}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <b>Current Balance</b>: {Constant.currencyFormat(walletDetails.balance)}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <b>Created Date</b>: {new Date(walletDetails.date).toLocaleString()}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card.Text>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wallet;\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport API from '../helper/Api';\r\nimport LocalStorage from '../helper/LocalStorage';\r\nfunction SetupWallet() {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try{\r\n        const apiRes = await API.post('/setup',{name : data.username, balance: data.balance ? data.balance : 0})\r\n        if(apiRes?.data?._id){\r\n            LocalStorage.setWalletId(apiRes.data._id);\r\n            history.push(\"/\");\r\n        } else {\r\n          toast.error('Internal Server Error');\r\n        }\r\n    }\r\n    catch(error){\r\n      toast.error('Internal Server Error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center\">\r\n    <h3 className=\"text-center\">Setup New Wallet</h3>\r\n    <Form>\r\n      <Form.Group className=\"mb-3\" controlId=\"username\">\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          size=\"lg\"\r\n          type=\"text\"\r\n          placeholder=\"Enter username\"\r\n          name=\"username\"\r\n          {...register('username', { required: true, maxLength: 20, minLength: 3 })}\r\n        />\r\n        {errors?.username && (\r\n          <Form.Text className=\"text-danger\">{`* Username is required and need to be 3-20 characters long.`}</Form.Text>\r\n        )}\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"balance\">\r\n        <Form.Label>Initial Balance</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          size=\"lg\"\r\n          name=\"balance\"\r\n          placeholder=\"Enter initial balance\"\r\n          {...register('balance')}\r\n        />{' '}\r\n      </Form.Group>\r\n      <Button variant=\"primary\" size=\"lg\" onClick={handleSubmit(onSubmit)} type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default SetupWallet;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\r\nimport { useForm } from 'react-hook-form';\r\nimport API from '../helper/Api';\r\nimport LocalStorage from '../helper/LocalStorage';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction AddTransaction() {\r\n  const history = useHistory();\r\n  const [typeValue, setTypeValue] = useState('CREDIT');\r\n  const [walletID, setWalletID] = useState(null);\r\n  const transactionType = [\r\n    { name: 'Debit', value: 'DEBIT' },\r\n    { name: 'Credit', value: 'CREDIT' },\r\n  ];\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  useEffect(() => {\r\n    const walletID = LocalStorage.getWalletId();\r\n    if (!walletID) {\r\n      history.push('/setup');\r\n    } else {\r\n        setWalletID(walletID);\r\n    }\r\n  }, [history]);\r\n  const onSubmit = async (data) => {\r\n    try {\r\n        let apiData = {amount: data.amount, type: typeValue };\r\n        if(data.description){\r\n            apiData.description = data.description;\r\n        }\r\n      const apiRes = await API.post(`/transact/${walletID}`, apiData);\r\n      console.log('FORM DATA+++++==', { res: apiRes.data });\r\n      if (apiRes.data._id) {\r\n        LocalStorage.setWalletId(apiRes.data._id);\r\n        history.push('/');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Internal Server Error', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"center\">\r\n      <h3 className=\"text-center\">Add New Debit/Credit Transaction </h3>\r\n      <p>Wallet ID : {walletID}</p>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"amount\">\r\n          <Form.Label>Amount</Form.Label>\r\n          <Form.Control\r\n            size=\"lg\"\r\n            type=\"number\"\r\n            placeholder=\"Enter amount\"\r\n            name=\"amount\"\r\n            {...register('amount', { required: true, min: 1 })}\r\n          />\r\n          {errors?.amount && (\r\n            <Form.Text className=\"text-danger\">{`* Amount is required and need to be more than 0.`}</Form.Text>\r\n          )}\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"lg\"\r\n            name=\"description\"\r\n            placeholder=\"Enter description\"\r\n            {...register('description')}\r\n          />{' '}\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"type\">\r\n        <ButtonGroup>\r\n          {transactionType.map((radio, idx) => (\r\n            <ToggleButton\r\n              key={idx}\r\n              id={`radio-${idx}`}\r\n              type=\"radio\"\r\n              variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n              name=\"radio\"\r\n              value={radio.value}\r\n              checked={typeValue === radio.value}\r\n              onChange={(e) => setTypeValue(e.currentTarget.value)}\r\n            >\r\n              {radio.name}\r\n            </ToggleButton>\r\n          ))}\r\n        </ButtonGroup>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" size=\"lg\" onClick={handleSubmit(onSubmit)} type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTransaction;\r\n","import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport Transaction from './components/Transaction';\nimport Wallet from './components/Wallet';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SetupWallet from './components/SetupWallet';\nimport AddTransaction from './components/AddTransaction';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Container>\n            <Navbar.Brand>React-Test</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"me-auto\">\n                <Nav.Link as={Link} to=\"/\">\n                  Wallet\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/transactions\">\n                  Transactions\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n        <div className=\"main-border\">\n          <Switch>\n            <Route path=\"/transactions\">\n              <Transaction />\n            </Route>\n            <Route path=\"/setup\">\n              <SetupWallet />\n            </Route>\n            <Route path=\"/add\">\n              <AddTransaction />\n            </Route>\n            <Route path=\"/\">\n              <Wallet />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nvar CryptoJS = require(\"crypto-js\");\r\nconst secretKey = 'my-secret-key@123'; // Save in env or any other secret place not here\r\n\r\nconst setWalletId = (id) => {\r\n    const encWalletID = CryptoJS.AES.encrypt(`${id}`, `${secretKey}`).toString()\r\n    console.log(encWalletID);\r\n    localStorage.setItem('walletId', encWalletID);\r\n}\r\nconst getWalletId = () => {\r\n    if(localStorage.getItem('walletId')){\r\n        const bytes = CryptoJS.AES.decrypt(`${localStorage.getItem('walletId')}`, `${secretKey}`);\r\n        return bytes.toString(CryptoJS.enc.Utf8) \r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexports.setWalletId = setWalletId;\r\nexports.getWalletId = getWalletId;","const currencyFormat= (num) => {\r\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\nexports.currencyFormat = currencyFormat;"],"sourceRoot":""}